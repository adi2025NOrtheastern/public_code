/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.Uber;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.plaf.SliderUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author aditi
 */
public class DisplayJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DisplayJPanel
     */
    Map<String,ArrayList<Car>> mapObj;
    Uber uobj;
    DefaultTableModel model ;
    private TableColumnModel tableColumnModel;
    JSplitPane jsp;
    JPanel previousFrame;
    public DisplayJPanel(Map<String,ArrayList<Car>> mapObj,Uber uobj, JSplitPane jsp, JPanel previousFrame) {
        initComponents();
        this.mapObj=mapObj;
        this.uobj=uobj;
        this.jsp=jsp;
        this.previousFrame=previousFrame;
               
        populateTable();
    }

    void populateTable(){
        //mapObj=uobj.getCarListByManufacturer();
        DefaultTableModel dtm = (DefaultTableModel)tblListMnfctrCar.getModel();
        dtm.setRowCount(0);
        for(String manu :mapObj.keySet()){
            ArrayList<Car> carList = mapObj.get(manu);
            for(Car c: carList){
            Object[] row= new Object[2];
            row[0]=manu;
            row[1]=c.getCarName();
            dtm.addRow(row);
        }
        }
    }
    
    public void refreshTable(){
        populateTable();
    }
     @Override
    public String toString() {
      //setUI((SliderUI)UIManager.getUI(this));
      //initComponents();
      refreshTable();
      return "ok";
   }
    
    
    private void populateno(){
       /* model = new DefaultTableModel();
        tblManufactureCarList.setModel(model);
        for(String s: mapObj.keySet()){
            model.addColumn(s);
            ArrayList<Car> cars= mapObj.get(s);
            for(Car car: cars ){
                model.addRow(new Object[]{car.getCarName().toString()});
            }
        */
            for(String s: mapObj.keySet()){
                //create a table
                JTable table = new JTable();
                model=new DefaultTableModel();
                tableColumnModel = table.getColumnModel();
                table.setModel(model);
                model.setRowCount(0);
                //TableColumn toAdd = new TableColumn();
                model.addColumn(s);
                
                table.setVisible(true);
                ArrayList<Car> cars= mapObj.get(s);
            for(Car car: cars ){
                Object[] row= new Object[1];
            row[0]=car.getCarName();
            //row[1]=car.getCity();
            model.addRow(row);
            }
            this.add(table);
            table.getModel().addTableModelListener(new TableModelListener() {
                    @Override
                    public void tableChanged(TableModelEvent e) {
                         if(e.getColumn()==3 && (model.getRowCount()-1)==e.getLastRow()){
                       
                       
                        String [] newRow = {"","","",""};
                        model.addRow(newRow);
                       
                    } //To change body of generated methods, choose Tools | Templates.
                    }
                });
            
                
            }
            
            
            
            
        }

                    
                    
                    
                    
                   // model.addRow(new Object[]{jTextField1.getText(), jTextField2.getText(),jTextField3.getText(),jTextField4.getText()});
                    
                    
                    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblListMnfctrCar = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        tblListMnfctrCar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblListMnfctrCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manufacturer", "Car"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblListMnfctrCar);

        btnView.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setText("Search On this Set");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 204, 204));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnView)
                                .addGap(93, 93, 93)
                                .addComponent(btnSearch)))))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnBack)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnSearch))
                .addContainerGap(403, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblListMnfctrCar.getSelectedRow();
        Car car = null;
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        else{
            int column = 1;
            int row = tblListMnfctrCar.getSelectedRow();
            String value = tblListMnfctrCar.getModel().getValueAt(row, column).toString();
            car = null;
            for (Car c :  uobj.getAvailableCarList()){
                if(c.getCarName().equals(value)){
                    car=c;
                    break;
                }
            }
            for (Car c :  uobj.getBookedCarList()){
                if(c.getCarName().equals(value)){
                    car=c;
                    break;
                }
            }
            ViewCarJPanel panel =new ViewCarJPanel(car,uobj,jsp,this);
            jsp.setRightComponent(panel);
        }

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        //Uber newUobj=new Uber();

        
                //newUobj.setAvailableCarList().add(c);
            
               // newUobj.getBookedCarList().add(c);
        Uber newUobj=new Uber();
        if(mapObj==null){
            JOptionPane.showMessageDialog(null, "No data");
            return;
        }
        for(String manu:mapObj.keySet())
        {
            for(Car c: mapObj.get(manu)){
                if(c.getAvailable().equals("A")){
                    newUobj.getAvailableCarList().add(c);
                }
                else{
                    newUobj.getBookedCarList().add(c);
                }
            }
        }

        SearchJPanel panel = new SearchJPanel(jsp,newUobj,this);
        
        jsp.setRightComponent(panel);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        previousFrame.toString();
       // previousFrame
        jsp.setRightComponent(previousFrame);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblListMnfctrCar;
    // End of variables declaration//GEN-END:variables
}
