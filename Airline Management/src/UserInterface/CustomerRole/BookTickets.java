/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import Business.Airliner;
import Business.AirlinerDirectory;
import Business.Customer;
import Business.CustomerDirectory;
import Business.Flight;
import Business.FlightSchedule;
import Business.Ticket;
import UserInterface.ManageAirliner.ManageAirlinersJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aditi
 */
public class BookTickets extends javax.swing.JPanel {

    /**
     * Creates new form BookTickets
     */
    
    JPanel UserProcessContainer;
    AirlinerDirectory airlinerDir;
    CustomerDirectory custDir;
    Customer customer;
    List<FlightSchedule> flightSchList;
    List<Flight> flightList;
    Flight flight;
    List<Ticket> ticketList;
    public BookTickets(JPanel UserProcessContainer, AirlinerDirectory airlinerDir, CustomerDirectory custDir, Customer c, List<FlightSchedule> flightSchList, List<Flight> flightList,  List<Ticket> ticketList) {
        initComponents();
        this.UserProcessContainer = UserProcessContainer;
        this.airlinerDir= airlinerDir;
        this.custDir=custDir;
        this.flightList=flightList;
        this.customer=c;
        this.flightSchList = flightSchList;
        this.ticketList=ticketList;
      //  populateCustomer();
        populateSource();
        populateDest();
        cmbCustomerID.setVisible(false);
        txtSrc.setVisible(false);
        txtDestination.setVisible(false);
        lblCustomerID.setText(customer.getfName()+" "+ customer.getlName() + " (" + customer.getCustomerID() + ")");
    }

    public void populateSource(){
        //String[] array = new String[arrayList.size()];
         List<String> al= new ArrayList<>();//.toArray(new String[custDir.getCustomerList().size()]); 
         for(FlightSchedule fs: flightSchList)
         {
             if(! al.contains(fs.getSrc()))
             {
                 al.add(fs.getSrc());
             }
         }
         
         cmbSrc.setModel(new DefaultComboBoxModel(al.toArray()));
    }
    
     public void populateDest(){
        List<String> al= new ArrayList<>();//.toArray(new String[custDir.getCustomerList().size()]); 
        String source = cmbSrc.getItemAt(cmbSrc.getSelectedIndex());
        for(FlightSchedule fs: flightSchList)
         {
            // if(fs.getSrc().equals(source) && (! al.contains(fs.getDestination())))
             if(! al.contains(fs.getDestination()))
             {
             al.add(fs.getDestination());
             }
         }
         
         cmbDest.setModel(new DefaultComboBoxModel(al.toArray()));
    }
    
    
    public void populateCustomer(){
        //String[] array = new String[arrayList.size()];
         List<Customer> al= custDir.getCustomerList();//.toArray(new String[custDir.getCustomerList().size()]); 
         cmbCustomerID.setModel(new DefaultComboBoxModel(al.toArray()));
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbTime = new javax.swing.JComboBox<>();
        txtDate = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFlightSchedule = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnBook = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cmbSeatType = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        lblCustomerID = new javax.swing.JLabel();
        txtDestination = new javax.swing.JTextField();
        txtSrc = new javax.swing.JTextField();
        cmbCustomerID = new javax.swing.JComboBox<>();
        cmbSrc = new javax.swing.JComboBox<>();
        cmbDest = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Book Ticket");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Source:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Destination:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Date:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Time:");

        cmbTime.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmbTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Morning", "Evening", "Night" }));

        txtDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblFlightSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Name", "Source", "Destination", "Date", "Time", "Airliner", "FlightNum", "Available Seat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFlightSchedule);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Customer ID:");

        btnBook.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Seat Type:");

        cmbSeatType.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmbSeatType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Middle", "Window", "Aisle" }));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setText("<Back");
        btnBack.setToolTipText("");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblCustomerID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCustomerID.setText("jLabel2");

        txtDestination.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtSrc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbCustomerID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmbCustomerID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Customerid1", "CustomerID2" }));

        cmbSrc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmbSrc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSrc.setMinimumSize(new java.awt.Dimension(108, 28));

        cmbDest.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmbDest.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDest.setMinimumSize(new java.awt.Dimension(108, 28));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("(mm/dd/yyyy)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnBack)
                        .addGap(253, 253, 253)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(256, 256, 256)
                        .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(cmbCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(cmbSeatType, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(0, 0, Short.MAX_VALUE))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(354, 354, 354)
                                        .addComponent(btnSearch))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(358, 358, 358)
                                        .addComponent(btnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSrc, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbSrc, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDate)
                                    .addComponent(cmbDest, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(506, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(22, 22, 22)
                        .addComponent(txtSrc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbSrc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbDest, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbSeatType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnBook)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        backAction();
                                     
    }
    private void backAction(){
        UserProcessContainer.remove(this);
        //Component [] componentArray = UserProcessContainer.getComponents();
        //Component c = componentArray[componentArray.length-1];
        //ManageAirlinersJPanel ms = (ManageAirlinersJPanel) c;
       // ms.populateAirlinerList();
        CardLayout layout = (CardLayout) UserProcessContainer.getLayout();
        layout.previous(UserProcessContainer);
    
    
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        populateSearchResults();
    }                                         

    
    
    void populateSearchResults(){
        try{
        /*if(txtSrc.getText() == null || txtSrc.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Enter Source");
            return;
        }
        
        if(txtDestination.getText() == null || txtDestination.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Enter Destination");
            return;
        }
        */
         java.util.Date date=null;
         SimpleDateFormat sdfrmt;
        if(!txtDate.getText().isEmpty()){
            sdfrmt= new SimpleDateFormat("MM/dd/yyyy");
            sdfrmt.setLenient(false);
            date = sdfrmt.parse(txtDate.getText());
        }
        
        String source = cmbSrc.getItemAt(cmbSrc.getSelectedIndex());//txtSrc.getText();
        String dest= cmbDest.getItemAt(cmbDest.getSelectedIndex());//txtDestination.getText();
        String time = cmbTime.getItemAt(cmbTime.getSelectedIndex());
        if(date==null)
        {
            searchFlights(source, dest, time);
        }
        else{
            searchFlights(source, dest,date, time);
        }
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Date format mm/dd/yyyy like 12/12/2020 !");
            System.out.println(Arrays.toString(e.getStackTrace()));
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:
        int row = tblFlightSchedule.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        FlightSchedule fsch= (FlightSchedule)  tblFlightSchedule.getValueAt(row,6);
        
        
         //check seat
        String seatType= cmbSeatType.getItemAt(cmbSeatType.getSelectedIndex());
        String seatNumber=fsch.bookTicket(seatType);
        if(seatNumber.equals("Not Available"))
        {
            JOptionPane.showMessageDialog(null, "Not Available, please select other", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
            
        }
        
        
        
        
        //create ticket
        Ticket t = new Ticket();
        ticketList.add(t);
        t.setCustomerID(customer.getCustomerID());
        t.setDate(fsch.getDate().toString());
        t.setSource(fsch.getSrc());
        t.setDestination(fsch.getDestination());
        t.setFlightNum(fsch.getFlightNum());
        t.setPrice(fsch.getPrice());
        t.setTime(fsch.getTime());
        t.setStatus("Booked");
        t.setSeatNumber(seatNumber);
        t.setFlightID(fsch.getFsID());
        //t.setFlight(flight);
        JOptionPane.showMessageDialog(null, "Booked with Seat "+seatNumber );
        populateSearchResults();
    }//GEN-LAST:event_btnBookActionPerformed

    
    public void searchFlights(String source, String dest, Date date, String time) 
    {
       // String tableDateExpired = "2012-03-18";
        try{
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        DefaultTableModel model = (DefaultTableModel) tblFlightSchedule.getModel();
        model.setRowCount(0);
        for(FlightSchedule fs : flightSchList)
        {
            String fDate ;//= fs.getDate();
            
            fDate = sdf.format(fs.getDate());
            String dateS= sdf.format(date);
           if(fs.getSrc().equals(source)
                   &&
               fs.getDestination().equals(dest)&&
                   (fDate.equals(dateS)  )&&
                   fs.getTime().equals(time) && fs.getFlightSeatCount()>0 )
           {
              
               
               
               for(Flight f: flightList)
               {
                   if(f.getFlightNum().equals(fs.getFlightNum()))
                   {
                       flight=f;
                       break;
                       
                   }
               }
               
                
        //List<FlightSchedule> flightSchList = flight.getFlightSchedule();
        
            Object row[] = new Object[8];
            row[0] = flight.getFlightName();
            row[1] = source;
            row[2] = dest;
            row[3] = fs.getDate();
            row[4] = fs.getTime();
            //row[5] = fs.getPrice();//flight.getFlightNum();
            row[5]= flight.getAirlinerName();
            row[6] = fs;
            row[7] = fs.getFlightSeatCount();
            model.addRow(row); 
            
           }
        }
        }
       
        catch(Exception e)
        {
            System.out.println(e);
        }
    }
    
    
    public void searchFlights(String source, String dest, String time) 
    {
       // String tableDateExpired = "2012-03-18";
        try{
    //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        boolean flag=false;
        DefaultTableModel model = (DefaultTableModel) tblFlightSchedule.getModel();
        model.setRowCount(0);
        for(FlightSchedule fs : flightSchList)
        {
           // String fDate ;//= fs.getDate();
            
          //  fDate = sdf.format(fs.getDate());
          //  String dateS= sdf.format(date);
           if(fs.getSrc().equals(source)
                   &&
               fs.getDestination().equals(dest)&&
                  // (fDate.equals(dateS)  )&&
                   fs.getTime().equals(time) && fs.getFlightSeatCount()>0 )
           {
              
               
               
               for(Flight f: flightList)
               {
                   if(f.getFlightNum().equals(fs.getFlightNum()))
                   {
                       flight=f;
                      // break;
                       
                   }
               }
               String date = "";
               try{
                   SimpleDateFormat sdfrmt = new SimpleDateFormat("MM/dd/yyyy");
                        sdfrmt.setLenient(false);
                        date = sdfrmt.format(fs.getDate());
               }catch(Exception e){
                   date = fs.getDate().toString();
               }
               
               
                
        //List<FlightSchedule> flightSchList = flight.getFlightSchedule();
        
            Object row[] = new Object[8];
            row[0] = flight.getFlightName();
            row[1] = source;
            row[2] = dest;
            row[3] = date;
            row[4] = fs.getTime();
            //row[5] = fs.getPrice();//flight.getFlightNum();
            row[5]= flight.getAirlinerName();
            row[6]=fs;
            row[7] = fs.getFlightSeatCount();
            model.addRow(row); 
            flag=true;
           }
        }
         //  }
       // }
        if(flag==false)
        {
            JOptionPane.showMessageDialog(null, "Refine search criteria");
            return;
        }
        }
       
        catch(Exception e)
        {
            System.out.println(e);
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbCustomerID;
    private javax.swing.JComboBox<String> cmbDest;
    private javax.swing.JComboBox<String> cmbSeatType;
    private javax.swing.JComboBox<String> cmbSrc;
    private javax.swing.JComboBox<String> cmbTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCustomerID;
    private javax.swing.JTable tblFlightSchedule;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtSrc;
    // End of variables declaration//GEN-END:variables
}
